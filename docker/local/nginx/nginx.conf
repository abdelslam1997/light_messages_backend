# Specify the number of worker processes
worker_processes 1;

# Define the events block
events { 
    worker_connections 1024; # Set the maximum number of simultaneous connections
}

http {
    client_max_body_size 10M;  # Set maximum upload size to 10MB globally

    # Add timeout settings
    proxy_read_timeout 86400s;
    proxy_send_timeout 86400s;

    # Define the upstream group
    upstream django {
        server light_messages_backend:8000; # Point to the Django backend server
    }

    # Define the server block
    server {
        client_max_body_size 10M;  # Set maximum upload size to 10MB for this server
        listen 80; # Listen on port 80
        server_name localhost; # Set the server name to 'localhost'

        # Websocket connections
        location /ws/ {
            proxy_pass http://django; # Proxy requests to the 'django' upstream

            proxy_http_version 1.1; # Use HTTP version 1.1 for proxying
            proxy_set_header Upgrade $http_upgrade; # Set header to upgrade the connection (for WebSockets)
            proxy_set_header Connection "Upgrade"; # Set header to upgrade the connection

            proxy_set_header Host $host; # Preserve the original Host header
            proxy_set_header X-Real-IP $remote_addr; # Forward the real client IP address
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Add X-Forwarded-For header to keep track of client IPs
            proxy_set_header X-Forwarded-Host $server_name; # Add X-Forwarded-Host header

            # Add timeout settings
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
        }

        location / {
            proxy_pass http://django; # Proxy requests to the 'django' upstream

            proxy_set_header Host $host; # Preserve the original Host header
            proxy_set_header X-Real-IP $remote_addr; # Forward the real client IP address
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Add X-Forwarded-For header to keep track of client IPs
        }
    }
}