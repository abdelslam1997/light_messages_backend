apiVersion: apps/v1
kind: Deployment
metadata:
  name: light-messages-web
spec:
  selector:
    matchLabels:
      app: light-messages-web
  replicas: 1  # Changed to 1 for local development
  template:
    metadata:
      labels:
        app: light-messages-web  # This label must match the selector
    spec:
      containers:
        - name: backend-web
          # Repository and tag for the Docker image or local image
          image: abdelslam1997/light_messages_backend:latest
          command: ["/bin/sh", "-c", "/start.sh"]
          resources:
            limits:
              cpu: "500m"
              memory: "512Mi"
            requests:
              cpu: "200m"
              memory: "256Mi"
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: "light_messages.settings.local"
          envFrom:
            - secretRef:
                name: backend-secret
            - secretRef:
                name: postgres-secret
          volumeMounts:
            - name: shared-storage
              mountPath: /app/static
              subPath: static
            - name: shared-storage
              mountPath: /app/media
              subPath: media
      volumes:
        - name: shared-storage
          persistentVolumeClaim:
            claimName: shared-storage-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: light-messages-channels
spec:
  selector:
    matchLabels:
      app: light-messages-channels
  replicas: 4  # Changed to 1 for local development
  template:
    metadata:
      labels:
        app: light-messages-channels  # This label must match the selector
    spec:
      containers:
        - name: backend-channels
          # Repository and tag for the Docker image or local image
          image: abdelslam1997/light_messages_backend:latest
          command: ["/bin/sh", "-c", "/start.sh"]
          resources:
            limits:
              cpu: "500m"
              memory: "512Mi"
            requests:
              cpu: "200m"
              memory: "256Mi"
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: "light_messages.settings.local"
          envFrom:
            - secretRef:
                name: backend-secret
            - secretRef:
                name: postgres-secret
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: light-messages-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "25m"
    nginx.org/client-max-body-size: "25m"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, PUT, POST, DELETE, PATCH, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
spec:
  ingressClassName: nginx
  rules:
    - host: light-messages.local
      http:
        paths:
          - path: /api/v1/
            pathType: Prefix
            backend:
              service:
                name: backend-service-web
                port:
                  number: 8000
          - path: /admin_123/ # change on-production using (CI/CD) from .nginx.env file
            pathType: Prefix
            backend:
              service:
                name: backend-service-web
                port:
                  number: 8000
          - path: /ws/
            pathType: Prefix
            backend:
              service:
                name: backend-service-channels
                port:
                  number: 8000
          - path: /static/
            pathType: Prefix
            backend:
              service:
                name: static-file-server
                port:
                  number: 80
          - path: /media/
            pathType: Prefix
            backend:
              service:
                name: static-file-server
                port:
                  number: 80